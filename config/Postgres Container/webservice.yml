---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webservice #NAME_DEPLOYMENT
  labels:
    app: webservice
  namespace: default
spec:
  replicas: 2 #QTD_REPLICAS
  selector:
    matchLabels:
      app: webservice
  template:
    metadata:
      name: webservice
      labels:
        app: webservice
    spec:
      hostNetwork: true
      containers:
      - name: webservice #CONTAINER_NAME
        env:
          - name: POSTGRES_USER
            valueFrom:
              configMapKeyRef:
                name: postgres-config
                key: postgres_user
          - name: POSTGRES_PASSWORD
            valueFrom:
              configMapKeyRef:
                name: postgres-config
                key: postgres_password
          - name: POSTGRES_HOST
            valueFrom:
              configMapKeyRef:
                name: postgres-config #HOST_NAME
                key: postgres_host
        image:  lucassales/webservice:db_postgres #IMAGE_BUILD_YOUR_SPRING_BOOT_PROJECT
        ports:
        - containerPort: 8080
        resources:
          requests:
            memory: "512Mi"
            cpu: "0.3"
          limits:
            memory: "2Gi"
            cpu: "0.3"
---
apiVersion: v1
kind: Service
metadata:
  name: webservice 
  labels:
    app: webservice
  namespace: default
spec:
  type: NodePort 
  ports:
  - port: 8080
    targetPort: 8080
    nodePort: 31143
    protocol: TCP
    name: http
  selector:
    app: webservice


apiVersion: v1
kind: Service
metadata:
  name: webservice 
  labels:
    app: webservice
  namespace: default
spec:
  type: NodePort 
  ports:
  - port: 8080
    targetPort: 8080
    nodePort: 31143
    protocol: TCP
    name: http
  selector:
    app: webservice






apiVersion: v1
kind: Service
metadata:
  name: rabbitmq
  labels:
    app: rabbitmq
  name: rabbitmq
spec:
  ports:
  - name: amqp
    nodePort: 31992
    port: 5672
    protocol: TCP
    targetPort: 5672
  selector:
    app: rabbitmq
  type: NodePort




  apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "2"
  creationTimestamp: 2018-11-14T13:32:46Z
  generation: 2
  labels:
    run: rabbitmq
  name: rabbitmq
  namespace: default
  resourceVersion: "6174373"
  selfLink: /apis/extensions/v1beta1/namespaces/default/deployments/rabbitmq
  uid: c60fac5c-e811-11e8-aea4-fa163ee4babc
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      run: rabbitmq
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        run: rabbitmq
    spec:
      containers:
      - image: rabbitmq:3.7-alpine
        imagePullPolicy: IfNotPresent
        name: rabbitmq
        resources:
          requests:
            memory: 1Gi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      nodeSelector:
        node: node4
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 1

                   
